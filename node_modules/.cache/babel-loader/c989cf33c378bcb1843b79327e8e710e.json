{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfia\\\\Desktop\\\\cst\\\\apps\\\\reactjs-hangman\\\\src\\\\components\\\\Popup.jsx\";\nimport React from 'react';\nimport { QiRoboService } from '../services/QIService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleDialogue = text => {\n  QiRoboService.onService(\"ALTextToSpeech\", ALTextToSpeech => {\n    ALTextToSpeech.say(text);\n  });\n};\n\nconst Popup = _ref => {\n  let {\n    score\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" out of 30 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thanks for playing!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","QiRoboService","handleDialogue","text","onService","ALTextToSpeech","say","Popup","score"],"sources":["C:/Users/Alfia/Desktop/cst/apps/reactjs-hangman/src/components/Popup.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { QiRoboService } from '../services/QIService'\r\n\r\nconst handleDialogue = (text) => {\r\n  QiRoboService.onService(\"ALTextToSpeech\", (ALTextToSpeech) => {\r\n    ALTextToSpeech.say(text);\r\n  });\r\n}\r\nconst Popup = ({ score }) => {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <h2>Task completed!</h2>\r\n        <p>Your score: {score} out of 30 </p>\r\n        <p>Thanks for playing!</p>\r\n        {/* { handleDialogue(\" Amazing. Your score is \" + {score} + \" out of 30. You did a great job. That's all for today. I will see you next time. Touch my head sensor to close the application.\")} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;EAC/BF,aAAa,CAACG,SAAd,CAAwB,gBAAxB,EAA2CC,cAAD,IAAoB;IAC5DA,cAAc,CAACC,GAAf,CAAmBH,IAAnB;EACD,CAFD;AAGD,CAJD;;AAKA,MAAMI,KAAK,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3B,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAK,SAAS,EAAC,eAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2BAAgBA,KAAhB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAXD;;KAAMD,K;AAaN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}