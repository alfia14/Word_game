{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alfia\\\\Desktop\\\\cst\\\\apps\\\\reactjs-hangman\\\\src\\\\components\\\\Hangman.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport './styles.css'; // import { QiRoboService } from '../services/QIService';\n\nimport Popup from \"./Popup\";\nimport words from \"./words\";\nimport step0 from \"./images/0.jpg\";\nimport step1 from \"./images/1.jpg\";\nimport step2 from \"./images/2.jpg\";\nimport step3 from \"./images/3.jpg\";\nimport step4 from \"./images/4.jpg\";\nimport step5 from \"./images/5.jpg\";\nimport step6 from \"./images/6.jpg\"; // const handleDialogue = (text) => {\n//   QiRoboService.onService(\"ALTextToSpeech\", (ALTextToSpeech) => {\n//     ALTextToSpeech.say(text);\n//   });\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hangman = () => {\n  _s();\n\n  const [mistake, setMistake] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [guessed, setGuessed] = useState(new Set());\n  const [popup, setPopup] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", keyPress);\n    };\n  }, []);\n  useEffect(() => {// handleDialogue(words[currentQuestion].hint);\n  }, [currentQuestion]);\n\n  const guessedWord = () => {\n    return words[currentQuestion].word.split(\"\").map(bingo => guessed.has(bingo) ? bingo : \"_\");\n  };\n\n  const handleGuess = value => {\n    let letter = value; // handleDialogue(letter);\n\n    setGuessed(prevGuessed => new Set(prevGuessed.add(letter)));\n    setMistake(prevMistake => prevMistake + (words[currentQuestion].word.includes(letter) ? 0 : 1));\n  };\n\n  const keyPress = event => {\n    if (event.keyCode >= 65 && event.keyCode <= 90 || event.keyCode >= 97 && event.keyCode <= 122) {\n      handleGuess(event.key);\n    } else if (event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n      resetButton();\n    }\n  };\n\n  const generateButtons = () => {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      value: letter,\n      onClick: e => handleGuess(e.target.value),\n      disabled: guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  };\n\n  const resetButton = () => {\n    setMistake(0);\n    setGuessed(new Set());\n\n    if (currentQuestion !== words.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n\n    if (currentQuestion === words.length - 1) {\n      setPopup(true);\n    }\n  };\n\n  const maxWrong = 6;\n  const images = [step0, step1, step2, step3, step4, step5, step6];\n  const altText = `${mistake}/${maxWrong} wrong guesses`;\n  const isWinner = guessedWord().join(\"\") === words[currentQuestion].word;\n  let gameStat = generateButtons();\n  const gameOver = mistake >= maxWrong;\n\n  if (isWinner) {\n    gameStat = \"YOU WON\"; // handleDialogue(\"Congratulations. You guessed it right.\");\n  }\n\n  if (mistake >= maxWrong) {\n    gameStat = \"YOU LOST\";\n    handleDialogue(\"Oops! No problem. Better Luck Next Time!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Hangman\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"Hangman-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Hangman-guessed-wrong\",\n        children: [\"Guessed wrong: \", mistake, \"/6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Hangman-hint\",\n      children: words[currentQuestion].hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Hangman-word\",\n      children: !gameOver ? guessedWord() : words[currentQuestion].word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Hangman-status\",\n      children: gameStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman-reset-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Hangman-reset\",\n        onClick: resetButton,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this), popup && /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hangman, \"8+2ow5Og57fhl4kKWlO7EX/dtfw=\");\n\n_c = Hangman;\nexport default Hangman;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","Component","useState","useEffect","Popup","words","step0","step1","step2","step3","step4","step5","step6","Hangman","mistake","setMistake","currentQuestion","setCurrentQuestion","guessed","setGuessed","Set","popup","setPopup","window","addEventListener","keyPress","removeEventListener","guessedWord","word","split","map","bingo","has","handleGuess","value","letter","prevGuessed","add","prevMistake","includes","event","keyCode","key","resetButton","generateButtons","e","target","length","maxWrong","images","altText","isWinner","join","gameStat","gameOver","handleDialogue","hint"],"sources":["C:/Users/Alfia/Desktop/cst/apps/reactjs-hangman/src/components/Hangman.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport './styles.css'\r\n// import { QiRoboService } from '../services/QIService';\r\nimport Popup from \"./Popup\";\r\nimport words from \"./words\";\r\n\r\n\r\nimport step0 from \"./images/0.jpg\";\r\nimport step1 from \"./images/1.jpg\";\r\nimport step2 from \"./images/2.jpg\";\r\nimport step3 from \"./images/3.jpg\";\r\nimport step4 from \"./images/4.jpg\";\r\nimport step5 from \"./images/5.jpg\";\r\nimport step6 from \"./images/6.jpg\";\r\n\r\n// const handleDialogue = (text) => {\r\n//   QiRoboService.onService(\"ALTextToSpeech\", (ALTextToSpeech) => {\r\n//     ALTextToSpeech.say(text);\r\n//   });\r\n// }\r\n\r\nconst Hangman = () => {\r\n  const [mistake, setMistake] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [guessed, setGuessed] = useState(new Set());\r\n  const [popup, setPopup] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", keyPress);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyPress);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      // handleDialogue(words[currentQuestion].hint);\r\n    }, [currentQuestion]);\r\n\r\n  const guessedWord = () => {\r\n    return words[currentQuestion].word.split(\"\").map((bingo) => (guessed.has(bingo) ? bingo : \"_\"));\r\n  };\r\n\r\n  const handleGuess = (value) => {\r\n    let letter = value;\r\n    // handleDialogue(letter);\r\n    setGuessed((prevGuessed) => new Set(prevGuessed.add(letter)));\r\n    setMistake((prevMistake) =>\r\n      prevMistake + (words[currentQuestion].word.includes(letter) ? 0 : 1)\r\n    );\r\n  };\r\n  const keyPress = (event) => {\r\n    if (\r\n      (event.keyCode >= 65 && event.keyCode <= 90) ||\r\n      (event.keyCode >= 97 && event.keyCode <= 122)\r\n    ) {\r\n      handleGuess(event.key);\r\n    } else if (\r\n      event.keyCode === 8 ||\r\n      event.keyCode === 13 ||\r\n      event.keyCode === 32\r\n    ) {\r\n      resetButton();\r\n    }\r\n  };\r\n\r\n\r\n  const generateButtons = () => {\r\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map((letter) => (\r\n      <button\r\n        key={letter}\r\n        value={letter}\r\n        onClick={(e) => handleGuess(e.target.value)}\r\n        disabled={guessed.has(letter)}\r\n      >\r\n        {letter}\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  const resetButton = () => {\r\n    setMistake(0);\r\n    setGuessed(new Set());\r\n    if (currentQuestion !== words.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  \r\n    if (currentQuestion === words.length - 1) {\r\n      setPopup(true);\r\n    }\r\n\r\n  };\r\n\r\n  const maxWrong = 6;\r\n  const images = [step0, step1, step2, step3, step4, step5, step6];\r\n  const altText = `${mistake}/${maxWrong} wrong guesses`;\r\n  const isWinner = guessedWord().join(\"\") === words[currentQuestion].word;\r\n  let gameStat = generateButtons();\r\n  const gameOver = mistake >= maxWrong;\r\n\r\n  if (isWinner) {\r\n    gameStat = \"YOU WON\";\r\n    // handleDialogue(\"Congratulations. You guessed it right.\");\r\n  }\r\n\r\n  if (mistake >= maxWrong) {\r\n    gameStat = \"YOU LOST\";\r\n    handleDialogue(\"Oops! No problem. Better Luck Next Time!\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"Hangman\">\r\n    <nav className=\"Hangman-nav\">\r\n      <span className=\"Hangman-guessed-wrong\">\r\n        Guessed wrong: {mistake}/6\r\n      </span>\r\n    </nav>\r\n    {/* <p className=\"Hangman-image\">\r\n      <img src={images[mistake]} alt={altText} />\r\n    </p> */}\r\n    <p className=\"Hangman-hint\">{words[currentQuestion].hint}</p>\r\n    <p className=\"Hangman-word\">\r\n      {!gameOver ? guessedWord() : words[currentQuestion].word}\r\n    </p>\r\n    <p className=\"Hangman-status\">{gameStat}</p>\r\n    <div className=\"Hangman-reset-container\">\r\n      <button className=\"Hangman-reset\" onClick={resetButton}>\r\n        Next\r\n      </button>\r\n    </div>\r\n    {popup && <Popup />}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Hangman;"],"mappings":"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"},"metadata":{},"sourceType":"module"}